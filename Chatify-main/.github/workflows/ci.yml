name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lint-and-test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: Chatify/frontend/package-lock.json

    - name: Install frontend dependencies
      run: |
        cd Chatify/frontend
        npm ci

    - name: Lint frontend code
      run: |
        cd Chatify/frontend
        npm run lint || true

    - name: Run frontend tests
      run: |
        cd Chatify/frontend
        npm test -- --coverage --watchAll=false

    - name: Build frontend
      run: |
        cd Chatify/frontend
        npm run build

    - name: Upload frontend build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: Chatify/frontend/build/

  lint-and-test-backend:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: Chatify/server/package-lock.json

    - name: Install backend dependencies
      run: |
        cd Chatify/server
        npm ci

    - name: Lint backend code
      run: |
        cd Chatify/server
        npx eslint . --ext .js || true

    - name: Run backend tests
      run: |
        cd Chatify/server
        npm test || echo "No tests specified"

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run security audit - Frontend
      run: |
        cd Chatify/frontend
        npm audit --audit-level=high || true

    - name: Run security audit - Backend
      run: |
        cd Chatify/server
        npm audit --audit-level=high || true

  docker-build:
    runs-on: ubuntu-latest
    needs: [lint-and-test-frontend, lint-and-test-backend]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      run: |
        docker build -t chatify:${{ github.sha }} ./Chatify

    - name: Test Docker image
      run: |
        docker run -d --name test-container -p 3000:3000 chatify:${{ github.sha }}
        sleep 10
        curl -f http://localhost:3000 || exit 1
        docker stop test-container
        docker rm test-container